#!/bin/bash
#
# docker-ec2-metadata
#
# Set the priority so it starts before docker and stops after.
# chkconfig:   2345 80 99
# description: Docker EC2 Metadata Proxy
#

source /etc/rc.d/init.d/functions
[ -f /etc/sysconfig/docker-ec2-metadata ] && source /etc/sysconfig/docker-ec2-metadata

SERVICE_IP=${SERVICE_IP:-$(ifconfig eth0 | grep -Eo "inet addr:[0-9.]+" | grep -Eo "[0-9.]+")}
SERVICE_PORT=${SERVICE_PORT:-18000}
DEFAULT_IAM_ROLE=${DEFAULT_IAM_ROLE:-}

PID_FILE=/var/run/docker-ec2-metadata.pid

function drop_iptables_rules {
    if [ -f /var/lib/docker-ec2-metadata/drop-iptables-rules ]; then
        /bin/sh /var/lib/docker-ec2-metadata/drop-iptables-rules
        rm /var/lib/docker-ec2-metadata/drop-iptables-rules
    fi
}

function service_is_running {
    [[ -f "${PID_FILE}" && -n "`ps axf | grep $(cat "${PID_FILE}") | grep -v grep`" ]]
}

function start {
    echo -n "Starting docker-ec2-metadata: "

    if service_is_running; then
        echo Already Running
        return
    fi

    # Drop old iptables rules, if any
    drop_iptables_rules

    # Generate new iptables rules
    /usr/lib/docker-ec2-metadata/bin/add-iptables-rules     \
        "${SERVICE_IP}"                                     \
        "${SERVICE_PORT}"                                   \
        >/var/lib/docker-ec2-metadata/drop-iptables-rules

    # Start service
    sudo -u docker-ec2-metadata                             \
    /usr/lib/docker-ec2-metadata/bin/docker-ec2-metadata    \
        --server "${SERVICE_IP}:${SERVICE_PORT}"            \
        --default-iam-role "${DEFAULT_IAM_ROLE}"                    \
        2>&1 >>/var/log/docker-ec2-metadata/docker-ec2-metadata.log &

    local service_pid=$!

    if [ -z ${service_pid} ]; then
        echo Fail
    else
        echo ${service_pid} > ${PID_FILE}
        echo Ok
    fi
}

function stop {
    echo -n "Stopping docker-ec2-metadata: "

    if ! service_is_running; then
        echo Not Running
        return
    fi

    # Stop the service
    kill -HUP $(cat "${PID_FILE}")
    rm -f "${PID_FILE}"
    echo Stopped
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    stop-clean)
        stop
        drop_iptables_rules
        ;;
    restart|reload|condrestart)
        stop
        start
        ;;
    *)
        echo $"Usage: $0 {start|stop|restart|reload|status}"
        exit 1
esac

exit 0
